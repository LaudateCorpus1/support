version: 2.1
parameters:
  EnableDebugging:
    description: 'When `true`, debugging commands will run and output to terminal.'
    type: boolean
    default: true

orbs:
  win: circleci/windows@2.2.0
workflows:
  version: 2
  ci:
    jobs:
      - Get Session Variables
jobs:
  Get Session Variables:
    executor: win/default
    steps:
      - setup
      - debugging
commands:
  setup:
    steps:
      - checkout
      - run: echo << pipeline.git.branch >>
      - persist_to_workspace:
          root: .
          paths:
            - .
  debugging:
    when:
      condition:
        - equal: [ true, << pipeline.parameters.EnableDebugging >> ]
    steps:
      - attach_workspace:
          at: .
      - run:
          name: Install PowerShell Core
          command: dotnet tool install --global PowerShell
      - run:
          name: Display Session Variables (For Debugging)
          shell: pwsh.exe
          command: |
            Write-Host ("---------------------------------------------------------------------------------------")
            Write-Host ('Host Information') -BackgroundColor:('Green') -ForegroundColor:('Black')
            Write-Host ("---------------------------------------------------------------------------------------")
            Get-Host | Select-Object *
            Write-Host ("---------------------------------------------------------------------------------------")
            Write-Host ('Imported Environment Variables') -BackgroundColor:('Green') -ForegroundColor:('Black')
            Write-Host ("---------------------------------------------------------------------------------------")
            Get-ChildItem Env: | Format-Table
            Write-Host ("---------------------------------------------------------------------------------------")
            Write-Host ('PsBoundParameters') -BackgroundColor:('Green') -ForegroundColor:('Black')
            Write-Host ("---------------------------------------------------------------------------------------")
            $PsBoundParameters.GetEnumerator()
            Write-Host ("---------------------------------------------------------------------------------------")
            Write-Host ('Imported Variables') -BackgroundColor:('Green') -ForegroundColor:('Black')
            Write-Host ("---------------------------------------------------------------------------------------")
            Get-Variable | Format-Table